// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/artist": {
            "get": {
                "tags": [
                    "Artists"
                ],
                "summary": "List all artist",
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            },
            "post": {
                "description": "This endpoint allows the creation of a new artist by providing artist details in JSON format.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Artists"
                ],
                "summary": "Create a new artist",
                "parameters": [
                    {
                        "description": "Artist details",
                        "name": "artist",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Artist"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Artist Created Successfully",
                        "schema": {
                            "$ref": "#/definitions/models.Artist"
                        }
                    }
                }
            }
        },
        "/artist/{id}": {
            "get": {
                "tags": [
                    "Artists"
                ],
                "summary": "List an artist by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Artist ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Artists"
                ],
                "summary": "Delete a specific artist",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Artist ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            },
            "patch": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Artists"
                ],
                "summary": "Update a specific artist",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Artist ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Artist Updated Successfully",
                        "schema": {
                            "$ref": "#/definitions/models.Artist"
                        }
                    }
                }
            }
        },
        "/artist/{name}": {
            "get": {
                "tags": [
                    "Artists"
                ],
                "summary": "Search artist by name",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Artist Name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Artist details",
                        "name": "artist",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Artist"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Artist object",
                        "schema": {
                            "$ref": "#/definitions/models.Artist"
                        }
                    }
                }
            }
        },
        "/ping": {
            "get": {
                "description": "do ping",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Test API connection"
                ],
                "summary": "Test API connection",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "models.Artist": {
            "type": "object"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
